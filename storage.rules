rules_version = '2';
service firebase.storage {
  match /b/{bucket}/o {
    // Funções auxiliares
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isImage() {
      return request.resource.contentType.matches('image/.*');
    }

    function isValidSize() {
      return request.resource.size <= 5 * 1024 * 1024; // 5MB
    }

    // Regras para fotos de inspeção
    match /inspections/{inspectionId}/{photoName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
        && isImage()
        && isValidSize();
    }

    // Regras para fotos de perfil
    match /users/{userId}/profile/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated() 
        && isOwner(userId)
        && isImage()
        && isValidSize();
    }

    // Regras para documentos de clientes
    match /clients/{clientId}/{fileName} {
      allow read: if isAuthenticated();
      allow write: if isAuthenticated()
        && isValidSize();
    }
  }
}
