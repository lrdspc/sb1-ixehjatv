{
  "env": {
    "browser": true,
    "es2021": true,
    "serviceworker": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:jsx-a11y/recommended",
    "plugin:tailwindcss/recommended",
    "prettier"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": "latest",
    "sourceType": "module",
    "project": "./tsconfig.json"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "react-hooks",
    "import",
    "jsx-a11y",
    "tailwindcss"
  ],
  "rules": {
    // Estilo e formatação
    "indent": ["error", 2],
    "linebreak-style": ["error", "windows"],
    "quotes": ["error", "single"],
    "semi": ["error", "always"],
    
    // React
    "react/react-in-jsx-scope": "off",
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "warn",
    "react/prop-types": "off",
    "react/display-name": "warn",
    "react/jsx-no-target-blank": ["error", { "allowReferrer": true }],
    "react/jsx-curly-brace-presence": ["error", { "props": "never", "children": "never" }],
    "react/jsx-pascal-case": ["error", { "allowNamespace": true }],
    
    // TypeScript
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-unused-vars": ["warn", { 
      "argsIgnorePattern": "^_",
      "varsIgnorePattern": "^_",
      "caughtErrorsIgnorePattern": "^_"
    }],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": ["PascalCase"],
        "prefix": ["I"]
      },
      {
        "selector": "typeAlias",
        "format": ["PascalCase"]
      },
      {
        "selector": "variable",
        "format": ["camelCase", "UPPER_CASE", "PascalCase"],
        "leadingUnderscore": "allow"
      }
    ],
    "@typescript-eslint/consistent-type-imports": ["error", { "prefer": "type-imports" }],
    "@typescript-eslint/no-non-null-assertion": "warn",
    
    // PWA e Web específico
    "no-restricted-globals": [
      "error",
      {
        "name": "navigator",
        "message": "Use o hook useOnlineStatus para verificar o estado da conexão"
      }
    ],

    // Acessibilidade
    "jsx-a11y/anchor-is-valid": ["error", {
      "components": ["Link"],
      "specialLink": ["to"]
    }],
    "jsx-a11y/no-autofocus": "warn",
    
    // TailwindCSS
    "tailwindcss/no-custom-classname": "warn",
    "tailwindcss/enforces-negative-arbitrary-values": "warn",
    
    // Supabase e Banco de Dados
    "no-restricted-imports": [
      "error",
      {
        "patterns": [{
          "group": ["@supabase/supabase-js"],
          "importNames": ["createClient"],
          "message": "Importe o cliente Supabase de lib/supabase.ts"
        }]
      }
    ],
    
    // Hooks Personalizados
    "no-restricted-syntax": [
      "error",
      {
        "selector": "CallExpression[callee.name=/use.*/][arguments.length=0]",
        "message": "Hooks personalizados vazios não são permitidos"
      }
    ],
    
    // Importações
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal",
          ["parent", "sibling"],
          "index",
          "object",
          "type"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          },
          {
            "pattern": "@/**",
            "group": "internal"
          },
          {
            "pattern": "components/**",
            "group": "internal"
          },
          {
            "pattern": "hooks/**",
            "group": "internal"
          },
          {
            "pattern": "lib/**",
            "group": "internal"
          }
        ],
        "newlines-between": "always",
        "alphabetize": { 
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-cycle": "error",
    "import/no-unresolved": "error"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "node": {
        "extensions": [".js", ".jsx", ".ts", ".tsx"]
      }
    },
    "tailwindcss": {
      "config": "tailwind.config.js"
    }
  },
  "overrides": [
    {
      "files": ["src/components/ui/**/*.tsx"],
      "rules": {
        "react/prop-types": "error",
        "@typescript-eslint/explicit-function-return-type": ["error", {
          "allowExpressions": true
        }]
      }
    },
    {
      "files": ["*.test.ts", "*.test.tsx"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off",
        "react-hooks/rules-of-hooks": "off"
      }
    },
    {
      "files": ["src/lib/supabase.ts"],
      "rules": {
        "@typescript-eslint/no-explicit-any": "off"
      }
    }
  ]
}
